// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/superlinkx/go-skeleton/services/messages (interfaces: MessageGetter)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	postgres "github.com/superlinkx/go-skeleton/postgres"
)

// MockMessageGetter is a mock of MessageGetter interface.
type MockMessageGetter struct {
	ctrl     *gomock.Controller
	recorder *MockMessageGetterMockRecorder
}

// MockMessageGetterMockRecorder is the mock recorder for MockMessageGetter.
type MockMessageGetterMockRecorder struct {
	mock *MockMessageGetter
}

// NewMockMessageGetter creates a new mock instance.
func NewMockMessageGetter(ctrl *gomock.Controller) *MockMessageGetter {
	mock := &MockMessageGetter{ctrl: ctrl}
	mock.recorder = &MockMessageGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMessageGetter) EXPECT() *MockMessageGetterMockRecorder {
	return m.recorder
}

// GetMessageById mocks base method.
func (m *MockMessageGetter) GetMessageById(arg0 context.Context, arg1 int64) (postgres.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMessageById", arg0, arg1)
	ret0, _ := ret[0].(postgres.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMessageById indicates an expected call of GetMessageById.
func (mr *MockMessageGetterMockRecorder) GetMessageById(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMessageById", reflect.TypeOf((*MockMessageGetter)(nil).GetMessageById), arg0, arg1)
}

// GetMessageIds mocks base method.
func (m *MockMessageGetter) GetMessageIds(arg0 context.Context) ([]int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMessageIds", arg0)
	ret0, _ := ret[0].([]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMessageIds indicates an expected call of GetMessageIds.
func (mr *MockMessageGetterMockRecorder) GetMessageIds(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMessageIds", reflect.TypeOf((*MockMessageGetter)(nil).GetMessageIds), arg0)
}

// GetMessagesByIds mocks base method.
func (m *MockMessageGetter) GetMessagesByIds(arg0 context.Context, arg1 []int64) ([]postgres.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMessagesByIds", arg0, arg1)
	ret0, _ := ret[0].([]postgres.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMessagesByIds indicates an expected call of GetMessagesByIds.
func (mr *MockMessageGetterMockRecorder) GetMessagesByIds(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMessagesByIds", reflect.TypeOf((*MockMessageGetter)(nil).GetMessagesByIds), arg0, arg1)
}
